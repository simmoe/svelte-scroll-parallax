{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../TurningImageBottom.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount } from 'svelte'\n\timport TurningImageBottom from './components/TurningImageBottom.svelte' \n\n\t//time\n\tlet seconds = 0\n\n\timport { readable } from 'svelte/store';\n\n\tconst time = readable(new Date(), set => {\n\t\tconst interval = setInterval(() => {\n\t\t\tset(new Date().getSeconds())\n\t\t}, 1000);\n\n\t\treturn () => clearInterval(interval)\n\t})\n\n\tconst unsubscribe = time.subscribe(t => {\n\t\t// console.log(seconds ++)\n\t\tseconds ++\n\t})\n\n\t//aka p5 map\n\tfunction map_range(value, low1, high1, low2, high2) {\n\t\treturn low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n\t}\n\n\t//scrolling\n\tlet y = 0\n\n\t//Rounded y scroll value\n\t$: scrollPos = Math.round(y) \n\t\n\t//Dir check variable\n\tlet lastY = 0\n\n\tfunction scrollDir(y){\n\t\tlet ret = y - lastY < 0 ? 'up' : 'down'\n\t\tlastY = y\n\t\treturn ret\n\t}\n\t$: scrollDirection = scrollDir(y)\n\n\tlet viewportHeight\n\tlet scrollSpeed = 8\n\n\n\t//mouse\n\t$: m = { x: 0, y: 0 };\n\n\tfunction handleMousemove(event) {\n\t\tm.x = event.clientX;\n\t\tm.y = event.clientY;\n\t\tconsole.log(m)\n\t}\n\n\t//Keyboard\n\tfunction handleKeydown(event) {\n\t\tconsole.log(event.key)\n\t}\n\n</script>\n\n<svelte:window bind:scrollY={y} on:keydown={handleKeydown} bind:innerHeight={viewportHeight} on:mousemove={handleMousemove}/>\n\n<div class=\"menu\">\n\t<div><h3>{scrollPos}</h3></div>\n</div>\n\n<!-- The parts of the 3D elements that are behind the user — i.e. their z-axis coordinates are greater than the value of the perspective CSS property — are not drawn. -->\n\n<div class='pageheight' style=\"height:{6000}px\">\n\t<TurningImageBottom \n\t\tscrollStart=0 \n\t\tscrollPos={scrollPos}\n\t\tsrc='./img/tree.png'/>\n\t<TurningImageBottom \n\t\tscrollStart=400\n\t\tscrollPos={scrollPos}\n\t\tsrc='./img/japflowers.webp'/>\n\t<TurningImageBottom \n\t\tscrollStart=1000\n\t\tscrollPos={scrollPos}\n\t\tsrc='./img/flowers.png'/>\n\t<TurningImageBottom \n\t\tscrollStart=1900\n\t\tscrollPos={scrollPos}\n\t\tsrc='./img/beach.png'/>\n</div>\n\n\n<style>\n\t@import url('https://fonts.googleapis.com/css?family=Josefin+Sans:300&display=swap');\n\t.menu{\n\t\tposition:fixed;\n\t\twidth:100vw;\n\t\theight:5vh;\n\t\tbackground:black;\n\t\tcolor:white;\n\t\tdisplay:grid;\n\t\tplace-items:center;\n\t\tz-index:1;\n\t}\n\t.menu h3{\n\t\tmargin:0;\n\t}\n\t:global(body, html) {\n\t\tfont-family:'Josefin Sans';\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n</style>\n",
    "<script>\n\t//receive current scroll position and image file src from parent\n\texport let scrollPos, scrollStart, src\n\n    //subtract the current scrollposition from the dynamic variable to get a local scroll starting from zero \n    $: localScrollPos = scrollPos - scrollStart\n\n    //Check scroll direction\n\tlet lastScrollPos = 0\n\n\tfunction scrollDir(scrollPos){\n\t\tlet ret = scrollPos - lastScrollPos < 0 ? 'up' : 'down'\n\t\tlastScrollPos = scrollPos\n\t\treturn ret\n\t}\n\n    $: scrollDirection = scrollDir(scrollPos)\n\n\t//what we actually want is to count up to the images full height on the y-axis, and then go down again     \t\n\t$: imgYCounter = \n\tlocalScrollPos < imgHeight \n\t? localScrollPos \n\t: (scrollDirection == 'down' ? imgYCounter - 1 : imgYCounter + 1)\n\n\tlet perspective = '1000px'\n\t$: imageZCounter = - localScrollPos * 0.8\n\n    //check if we need to show the component - but take some z-axis into consideration here\n    $: destroy = localScrollPos > imgHeight * 3\n\n    //debug those values if you like\n    // $: console.log({imageZCounter, imgHeight, imgYCounter, localScrollPos, scrollDirection, scrollStart})\n\n\n    //the height of the source image\n\tlet imgHeight, viewport\n\n\tfunction whoosh(e) {\n\t\timgHeight = e.target.offsetHeight\n\t}\n\t$: console.log(viewport)\n\n</script>\n\n<!-- The parts of the 3D elements that are behind the user — i.e. their z-axis coordinates are greater than the value of the perspective CSS property — are not drawn. -->\n<svelte:window bind:innerHeight={viewport}/>\n\n{#if (scrollPos >= scrollStart) && !destroy}\n<img \n\ton:load={(whoosh)}\n\tclass=\"absbottom\" \n\tsrc={src} \n\tstyle='\n\t\ttransform: \n\t\tperspective({perspective}) \n\t\ttranslate3d(0, -{imgYCounter}px, {imageZCounter}px'\n\talt='heres a bird for you'/>\n{/if}\n\n<style>\n\t.fixed{\n\t\twidth:100vw;\n\t\theight:100vh;\n\t\toverflow:scroll;\n\t\tposition:fixed;\n\t\ttop:0;\n\t\tleft:0;\n\t\tdisplay:grid;\n\t\tplace-items:center;\n\t\tz-index:1;\n\t}\n\n\t.absbottom{\n\t\twill-change: transform;\n\t\tposition: fixed;\n\t\ttop:100vh;\n\t\tobject-fit:cover;\n\t\tobject-position: center top;\n\t\twidth:100%;\n\t}\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AA4FC,QAAQ,IAAI,uEAAuE,CAAC,CAAC,AACrF,iCAAK,CAAC,AACL,SAAS,KAAK,CACd,MAAM,KAAK,CACX,OAAO,GAAG,CACV,WAAW,KAAK,CAChB,MAAM,KAAK,CACX,QAAQ,IAAI,CACZ,YAAY,MAAM,CAClB,QAAQ,CAAC,AACV,CAAC,AACD,mBAAK,CAAC,gBAAE,CAAC,AACR,OAAO,CAAC,AACT,CAAC,AACO,UAAU,AAAE,CAAC,AACpB,YAAY,cAAc,CAC1B,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACX,CAAC;ACtCD,yBAAU,CAAC,AACV,WAAW,CAAE,SAAS,CACtB,QAAQ,CAAE,KAAK,CACf,IAAI,KAAK,CACT,WAAW,KAAK,CAChB,eAAe,CAAE,MAAM,CAAC,GAAG,CAC3B,MAAM,IAAI,AACX,CAAC"
}