{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../TurningImageBottom.svelte",
    "../../Cross.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount } from 'svelte'\n\timport TurningImageBottom from './components/TurningImageBottom.svelte' \n\timport Cross from './components/Cross.svelte' \n\n\t//scrolling\n\tlet y = 0\n\n\t//Rounded y scroll value\n\t$: scrollPos = Math.round(y) \n\n\tlet scrollSpeed = 12\n\tlet viewportHeight\n\n\t$: m = { x: 0, y: 0 };\n\n\texport function handleMouseMove(event) {\n\t\tm.x = event.clientX;\n\t\tm.y = event.clientY;\n\t\treturn m\n\t}\n\n</script>\n\n<svelte:window bind:scrollY={y} bind:innerHeight={viewportHeight} on:mousemove={handleMouseMove}/>\n\n<div class=\"menu\">\n\t<div><h3>{scrollPos}</h3></div>\n</div>\n\n<div class='pageheight' style=\"height:{scrollPos + viewportHeight + scrollSpeed}px\">\n\t<Cross enter='right' leave='bottom' start={0}  stop={300} cont={400} end={700} scrollPos={scrollPos} bgColor='purple'>\n\t\t<div slot='before'>\t\t\n\t\t\t<h1>The old man and the sea</h1>\n\t\t\t<p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium exercitationem earum sint aliquid magni, praesentium eos asperiores omnis enim iure nesciunt qui veniam consequuntur nisi laudantium maxime laboriosam ipsum. Deserunt.</p>\n\t\t</div>\n\t</Cross>\n\n\t<Cross enter='top' leave='right' start={400}  stop={700} cont={800} end={1200} scrollPos={scrollPos}>\n\t\t<div slot='custom'>\n\t\t\t<h1 class='verybig'>The sanctions</h1>\n\t\t</div>\n\t</Cross>\n\n\t<Cross src='./img/athmos4.JPG' enter='left' leave='bottom' start={800}  stop={1200} cont={1400} end={1900} scrollPos={scrollPos} />\n\n\t<Cross src='./img/bath100.JPG' enter='top' leave='right' start={1400}  stop={1900} cont={2000} end={2300} scrollPos={scrollPos} />\n</div>\n\n\n<style>\n\t@import url('https://fonts.googleapis.com/css?family=Josefin+Sans:300&display=swap');\n\t.menu{\n\t\tposition:fixed;\n\t\twidth:100vw;\n\t\theight:5vh;\n\t\tbackground:black;\n\t\tcolor:white;\n\t\tdisplay:grid;\n\t\tplace-items:center;\n\t\tz-index:1;\n\t}\n\t.menu h3{\n\t\tmargin:0;\n\t}\n\th1.verybig{\n\t\tfont-size: 20vh;\n\t}\n\t:global(body, html) {\n\t\tfont-family:'Josefin Sans';\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tscroll-behavior: smooth;\n\t}\n\t:global(*) {\n\t\tbox-sizing:border-box;\n\t}\n</style>\n",
    "<script>\n\t//receive current scroll position and image file src from parent\n\texport let scrollPos, scrollStart, src\n\n    //subtract the current scrollposition from the dynamic variable to get a local scroll starting from zero \n    $: localScrollPos = scrollPos - scrollStart\n\n    //Check scroll direction\n\tlet lastScrollPos = 0\n\n\tfunction scrollDir(scrollPos){\n\t\tlet ret = scrollPos - lastScrollPos < 0 ? 'up' : 'down'\n\t\tlastScrollPos = scrollPos\n\t\treturn ret\n\t}\n\n    $: scrollDirection = scrollDir(scrollPos)\n\n\t//what we actually want is to count up to the images full height on the y-axis, and then go down again     \t\n\t$: imgYCounter = \n\tlocalScrollPos < imgHeight \n\t? localScrollPos \n\t: (scrollDirection == 'down' ? imgYCounter - 1 : imgYCounter + 1)\n\n\tlet perspective = '1000px'\n\t$: imageZCounter = - localScrollPos * 0.8\n\n    //check if we need to show the component - but take some z-axis into consideration here\n    $: destroy = localScrollPos > imgHeight * 3\n\n    //debug those values if you like\n    // $: console.log({imageZCounter, imgHeight, imgYCounter, localScrollPos, scrollDirection, scrollStart})\n\n\n    //the height of the source image\n\tlet imgHeight, viewport\n\n\tfunction whoosh(e) {\n\t\timgHeight = e.target.offsetHeight\n\t}\n\t$: console.log(viewport)\n\n</script>\n\n<!-- The parts of the 3D elements that are behind the user — i.e. their z-axis coordinates are greater than the value of the perspective CSS property — are not drawn. -->\n<svelte:window bind:innerHeight={viewport}/>\n\n{#if (scrollPos >= scrollStart) && !destroy}\n<img \n\ton:load={(whoosh)}\n\tclass=\"absbottom\" \n\tsrc={src} \n\tstyle='\n\t\ttransform: \n\t\tperspective({perspective}) \n\t\ttranslate3d(0, -{imgYCounter}px, {imageZCounter}px'\n\talt='heres a bird for you'/>\n{/if}\n\n<style>\n\t.fixed{\n\t\twidth:100vw;\n\t\theight:100vh;\n\t\toverflow:scroll;\n\t\tposition:fixed;\n\t\ttop:0;\n\t\tleft:0;\n\t\tdisplay:grid;\n\t\tplace-items:center;\n\t\tz-index:1;\n\t}\n\n\t.absbottom{\n\t\twill-change: transform;\n\t\tposition: fixed;\n\t\ttop:100vh;\n\t\tobject-fit:cover;\n\t\tobject-position: center top;\n\t\twidth:100%;\n\t}\n\n</style>\n",
    "<script>\n\timport {map_range, scrollDir } from './shared.js'\n\n\texport let enter, leave, bgColor\n\texport let src = ''\n\texport let start, stop, cont, end, scrollPos = 0\n\n\tlet height, width\n\n\t//helper function to return in out positions \n\tfunction getSeq(p1, p2, p3){\n\t\tif(p1 < p2) return 0\n\t\tif(p1 >= p3) return p3 - p2\n\t\treturn p1 - p2\n\t}\n\n\t$: seqIn  = getSeq(scrollPos, start, stop)\n\t$: seqOut = getSeq(scrollPos, cont, end)\n\n\n\tlet x = 0\n\tlet y = 0\n\n\tfunction reset(){\n\t\tx = 0; y = 0;\n\t}\n\tlet el\n\n\t$:  {\n\t\tif(scrollPos > start && scrollPos <= stop){\t\t\n\t\t\tif(enter=='left')  \tx =  map_range(seqIn, 0, stop - start, -100, 0) \n\t\t\tif(enter=='right') \tx = -map_range(seqIn, 0, stop - start,  100, 0) \n\t\t\tif(enter=='top')\ty =  map_range(seqIn, 0, stop - start, -100, 0)\n\t\t\tif(enter=='bottom')\ty = -map_range(seqIn, 0, stop - start,  100, 0)\n\t\t}\n\t\tif(scrollPos > cont && scrollPos <= end){\t\n\t\t\tif(leave=='left')  \tx =  -map_range(seqOut, 0, end - cont,  0, 100) \n\t\t\tif(leave=='right') \tx =   map_range(seqOut, 0, end - cont,  0, 100) \n\t\t\tif(leave=='top')\ty =  -map_range(seqOut, 0, end - cont,  0, 100)\n\t\t\tif(leave=='bottom')\ty =   map_range(seqOut, 0, end - cont,  0, 100)\n\t\t}\n\t\tif(scrollPos > start){\n\t\t\tel.style.visibility = 'visible'\n\t\t\tel.style.transform = `translate(${x}%, ${y}%)`\n\t\t}\n\t}\n\t//x y resetters\n\t$: (stop-start) - seqIn < 5 && reset()\n\t$: scrollPos > cont && scrollPos < cont + 5 && reset()\n\n</script>\n\n<div \t\n\t\tbind:clientHeight={height} \n\t\tbind:clientWidth={width} \n\t\tclass='abs' \n\t\tstyle='\n\t\tposition:fixed;\n\t\tbackground-color:{bgColor};\n\t\tbackground-image:url(\"{src}\");\n\t\tbackground-size:cover;\n\t\tbackground-position:center center' \n\t\tbind:this={el}>\n\t<div>\n\t\t<div class='default'>\n\t\t\t<slot name='before' />\n\t\t</div>\t\t\t\n\t\t<slot name='custom' />\n\t</div>\n</div>\n\n<style>\n\t.abs{\n\t\tvisibility:hidden;\n\t\twill-change: transform;\n\t\tposition: fixed;\n\t\ttop:0;\n\t\tleft:0;\n\t\twidth:100vw;\n\t\theight:100vh;\n\t\tdisplay:grid;\n\t\tplace-items:center;\n\t\tbackground-color:#2ab7ca;\n\t\toverflow:hidden;\n\t\tcolor:white;\n\t}\n\t.abs .default {\n\t\tmax-height:40vw;\n\t\tmax-width:40vw;\n\t\toverflow:scroll;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AAmDC,QAAQ,IAAI,uEAAuE,CAAC,CAAC,AACrF,mCAAK,CAAC,AACL,SAAS,KAAK,CACd,MAAM,KAAK,CACX,OAAO,GAAG,CACV,WAAW,KAAK,CAChB,MAAM,KAAK,CACX,QAAQ,IAAI,CACZ,YAAY,MAAM,CAClB,QAAQ,CAAC,AACV,CAAC,AACD,oBAAK,CAAC,iBAAE,CAAC,AACR,OAAO,CAAC,AACT,CAAC,AACD,EAAE,sCAAQ,CAAC,AACV,SAAS,CAAE,IAAI,AAChB,CAAC,AACO,UAAU,AAAE,CAAC,AACpB,YAAY,cAAc,CAC1B,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,eAAe,CAAE,MAAM,AACxB,CAAC,AACO,CAAC,AAAE,CAAC,AACX,WAAW,UAAU,AACtB,CAAC;ACJD,yBAAU,CAAC,AACV,WAAW,CAAE,SAAS,CACtB,QAAQ,CAAE,KAAK,CACf,IAAI,KAAK,CACT,WAAW,KAAK,CAChB,eAAe,CAAE,MAAM,CAAC,GAAG,CAC3B,MAAM,IAAI,AACX,CAAC;ACPD,gCAAI,CAAC,AACJ,WAAW,MAAM,CACjB,WAAW,CAAE,SAAS,CACtB,QAAQ,CAAE,KAAK,CACf,IAAI,CAAC,CACL,KAAK,CAAC,CACN,MAAM,KAAK,CACX,OAAO,KAAK,CACZ,QAAQ,IAAI,CACZ,YAAY,MAAM,CAClB,iBAAiB,OAAO,CACxB,SAAS,MAAM,CACf,MAAM,KAAK,AACZ,CAAC,AACD,kBAAI,CAAC,QAAQ,cAAC,CAAC,AACd,WAAW,IAAI,CACf,UAAU,IAAI,CACd,SAAS,MAAM,AAChB,CAAC"
}